#include <stdio.h>
#define MAX 10

int s[MAX], top = -1;

void push() {
    if (top == MAX - 1) {
        printf("Stack Overflow\n");
        return;
    }
    int x;
    printf("Enter element to push: ");
    scanf("%d", &x);
    s[++top] = x;
}

void pop() {
    if (top == -1) {
        printf("Stack Underflow\n");
        return;
    }
    printf("Popped: %d\n", s[top--]);
}

void palindrome() {
    if (top == -1) {
        printf("Stack is empty\n");
        return;
    }
    int i, isPalindrome = 1;
    for (i = 0; i <= top / 2; i++) {
        if (s[i] != s[top - i]) {
            isPalindrome = 0;
            break;
        }
    }
    printf(isPalindrome ? "Stack is a palindrome\n" : "Stack is not a palindrome\n");
}

void display() {
    if (top == -1) {
        printf("Stack is empty\n");
        return;
    }
    printf("Stack elements: ");
    for (int i = top; i >= 0; i--)
        printf("%d ", s[i]);
    printf("\n");
}

void displayStatus() {
    printf("Stack Is Full: %s\n", (top == MAX - 1) ? "Yes" : "No");
    printf("Stack Is Empty: %s\n", (top == -1) ? "Yes" : "No");
}

int main() {
    int choice;
    while (1) {
        printf("\n1:Push 2:Pop 3:Palindrome 4:Display 5:Status 6:Exit\nEnter choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1: push(); break;
            case 2: pop(); break;
            case 3: palindrome(); break;
            case 4: display(); break;
            case 5: displayStatus(); break;
            case 6: return 0;
            default: printf("Invalid choice\n");
        }
    }
}
